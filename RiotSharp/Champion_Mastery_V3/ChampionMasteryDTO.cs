//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace RiotSharp.Champion_Mastery_V3
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using System.Collections;
    using Newtonsoft.Json;
    
    
    // - This object contains single Champion Mastery information for player and champion combination.
    public class ChampionMasteryDTO
    {
        
        // Is chest granted for this champion or not in current season.
        [JsonProperty("chestGranted")]
        private bool _chestGranted;
        
        // Champion level for specified player and champion combination.
        [JsonProperty("championLevel")]
        private int _championLevel;
        
        // Total number of champion points for this player and champion combination - they are used to determine championLevel.
        [JsonProperty("championPoints")]
        private int _championPoints;
        
        // Champion ID for this entry.
        [JsonProperty("championId")]
        private long _championId;
        
        // Player ID for this entry.
        [JsonProperty("playerId")]
        private long _playerId;
        
        // Number of points needed to achieve next level. Zero if player reached maximum champion level for this champion.
        [JsonProperty("championPointsUntilNextLevel")]
        private long _championPointsUntilNextLevel;
        
        // Number of points earned since current level has been achieved. Zero if player reached maximum champion level for this champion.
        [JsonProperty("championPointsSinceLastLevel")]
        private long _championPointsSinceLastLevel;
        
        // Last time this champion was played by this player - in Unix milliseconds time format.
        [JsonProperty("lastPlayTime")]
        private long _lastPlayTime;
        
        // Is chest granted for this champion or not in current season.
        public bool ChestGranted
        {
            get
            {
                return this._chestGranted;
            }
            set
            {
                this._chestGranted = value;
            }
        }
        
        // Champion level for specified player and champion combination.
        public int ChampionLevel
        {
            get
            {
                return this._championLevel;
            }
            set
            {
                this._championLevel = value;
            }
        }
        
        // Total number of champion points for this player and champion combination - they are used to determine championLevel.
        public int ChampionPoints
        {
            get
            {
                return this._championPoints;
            }
            set
            {
                this._championPoints = value;
            }
        }
        
        // Champion ID for this entry.
        public long ChampionId
        {
            get
            {
                return this._championId;
            }
            set
            {
                this._championId = value;
            }
        }
        
        // Player ID for this entry.
        public long PlayerId
        {
            get
            {
                return this._playerId;
            }
            set
            {
                this._playerId = value;
            }
        }
        
        // Number of points needed to achieve next level. Zero if player reached maximum champion level for this champion.
        public long ChampionPointsUntilNextLevel
        {
            get
            {
                return this._championPointsUntilNextLevel;
            }
            set
            {
                this._championPointsUntilNextLevel = value;
            }
        }
        
        // Number of points earned since current level has been achieved. Zero if player reached maximum champion level for this champion.
        public long ChampionPointsSinceLastLevel
        {
            get
            {
                return this._championPointsSinceLastLevel;
            }
            set
            {
                this._championPointsSinceLastLevel = value;
            }
        }
        
        // Last time this champion was played by this player - in Unix milliseconds time format.
        public long LastPlayTime
        {
            get
            {
                return this._lastPlayTime;
            }
            set
            {
                this._lastPlayTime = value;
            }
        }
    }
}
